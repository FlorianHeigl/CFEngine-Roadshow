###############################################################################
#
#   promises.cf - Basic Policy for Community
#
###############################################################################

# global vars

bundle common g {

classes:
      "parsed_all" expression => regextract("^(...)(...)(..).*", $(sys.uqhost), "part");

vars:

  # List here the IP masks that we grant access to on the server

 "application"          string => "${part[1]}";
 "function"             string => "${part[2]}";
 "instance"             string => "${part[3]}";
 "os"                   string => ${sys.flavor};
 "acl"                   slist => { "10.*", "194.151.143.205", "62.45.247.173" };
 "workdir"              string => "/var/cfengine";
 "master_location"      string => "/var/cfengine/masterfiles";
 "master_dynamic"       string => "/var/cfengine/dynamic_policies";
 "dir_bin"              string => "/var/cfengine/bin";
 "dir_modules"          string => "/var/cfengine/bin";
 "inputfiles"           string => "/var/cfengine/inputs";

 "controls"              slist => findfiles("/var/cfengine/inputs/controls/*.cf");
 "roadshow_policies"     slist => findfiles("/var/cfengine/inputs/roadshow_policies/*.cf");
 "dynamic_policies"      slist => findfiles("/var/cfengine/dynamic-inputs/**/*.cf");
# "application_policies"  slist => findfiles("/var/cfengine/dynamic-inputs/application/${g.application}/*.cf");
# "function_policies"     slist => findfiles("/var/cfengine/dynamic-inputs/function/${g.function}/*.cf");

 "policyhost"           string => "cfe-roadshow.webhuis.nl";
 "class_domain"         string => canonify("$(sys.domain)");
 "class_host"           string => canonify("$(sys.uqhost)");
 "ntp_server"           string => "inuc-01.webhuis.nl";
 "nameserver"            slist => { "10.68.71.187", "8.8.8.8"};
 "punt_komma"           string => ";";


reports:

 "platform_policies: ${platform_policies}";
 "applicat_policies: ${application_policies}";
 "function: ${function_policies}";

}

body common control {

 bundlesequence => { "g", "update", "${g.os}", "${g.application}", "${g.function}" };

  inputs => {

         # COPBL/Custom libraries
            "/var/cfengine/inputs/lib/3.6/stdlib.cf",

            "update.cf",

         # Control body for all agents

            @(g.controls),
            @(g.roadshow_policies),
            @(g.dynamic_policies),
#            @(g.application_policies),
#            @(g.function_policies),

  };

 version => "Community Promises.cf 3.6.2";
 ignore_missing_inputs => "true";
 ignore_missing_bundles => "true";
}
