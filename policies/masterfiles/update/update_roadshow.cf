#########################################################
#
# update_roadshow
# - Cfengine roadshow policy update (masterfiles -> inputs)
#
#########################################################

bundle agent cfe_roadshow_update_policy
{
  vars:
      "application"    string => ${classify.application}; # readfile("/etc/roadshow/application", 1k);
      "function"       string => ${classify.function}; # readfile("/etc/roadshow/function", 1k);

  methods:
      "" usebundle => cfe_roadshow_copy_policy($(application), $(function));
}

bundle agent cfe_roadshow_copy_policy(application, function)
{
  vars:
      "master_static"  string => "$(sys.workdir)/masterfiles";
      "master_dynamic" string => "$(sys.workdir)/dynamic_policies";

      "copy[components]"            slist => "${master_dynamic}/components/${sys.flavor}/${classify.role}.inputs";
      "copy[domain]"               string => "${master_dynamic}/domain/${sys.domain}";
      "copy[platform]"             string => "${master_dynamic}/platform/${sys.flavor}";
      "copy[role]"                 string => "${master_dynamic}/roles/${classify.role}.cf";

      "tocopy" slist => getindices("copy");

  files:

   "$(sys.workdir)/inputs"
           comment => "Copy policy updates from master source on policy server if a new validation was acquired",
            handle => "update_files_inputs_dir",
         copy_from => u_rcp("${master_static}","${sys.policy_hub}"),
      depth_search => u_recurse(inf),
      file_select  => u_input_files,
            action => u_immediate,
           classes => u_if_repaired("update_report");

#    am_policy_hub|validated_updates_ready::
#     validated_updates_ready::
      # note that validated_updates_ready is defined by
      # cfe_internal_update_policy as a global class so we can use it

      "$(sys.workdir)/dynamic-inputs-local/$(tocopy)"
      handle => "update_files_inputs_roadshow",
      copy_from => u_rcp("$(copy[$(tocopy)])", ${sys.policy_hub}),
      depth_search => u_recurse(inf),
      file_select  => u_input_files,
      action => u_immediate,
      classes => u_if_repaired("update_report");
}
